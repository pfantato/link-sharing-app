// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String  @unique
  password String
  username String? @unique
  name     String?
  picture  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  links   Link[]
  Account Account[]
  Session Session[]
}

model Platform {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  name       String @unique
  identifier String @unique

  backgroundColor String
  foregroundColor String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  links Link[]
}

model Link {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  label       String
  url         String
  isPublished Boolean @default(false)
  platformId  String  @db.ObjectId
  userId      String  @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  platform Platform @relation(fields: [platformId], references: [id])
  user     User     @relation(fields: [userId], references: [id])
}
